# Quick Start
# $ docker compose -f compose.rosbot.yaml up

# x-net-config:
#   - &dds-config-file "./dds-config.xml:/dds-config.xml" 
#   - &dds-config-env "FASTRTPS_DEFAULT_PROFILES_FILE=/dds-config.xml"

x-net-config:
  - &network_mode "service:husarnet-rosbot" 
  - &restart_policy "unless-stopped"

services:

  husarnet-rosbot:
    image: husarnet/husarnet
    ipc: shareable
    restart: *restart_policy
    volumes:
      - /var/lib/husarnet
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=0
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    environment:
      - HOSTNAME=rosbot
      - JOINCODE

  dds-router:
    image: husarnet/dds-router:v0.4.0
    restart: *restart_policy
    network_mode: *network_mode
    ipc: *network_mode
    volumes:
      - ./router-config.server.yaml:/config.yaml
    command: >
      ddsrouter 
      --config-path /config.yaml 
      --debug

  rplidar:
    image: husarion/rplidar:galactic
    restart: *restart_policy
    network_mode: *network_mode
    ipc: *network_mode
    devices:
      - /dev/ttyUSB0
    command: >
      ros2 launch sllidar_ros2 sllidar_launch.py 
        serial_baudrate:=${RPLIDAR_BAUDRATE:-115200}

  bridge:
    image: husarion/ros:galactic-ros1-bridge
    restart: *restart_policy
    network_mode: *network_mode
    ipc: *network_mode
    environment: 
      - ROS_MASTER_URI=http://ros-master:11311
    command: >
      ros2 run ros1_bridge dynamic_bridge

  ros-master:
    image: ros:noetic-ros-core
    restart: *restart_policy
    command: stdbuf -o L roscore

  rosbot:
    image: husarion/rosbot:noetic
    restart: *restart_policy
    devices:
      - ${SERIAL_PORT}
    environment:
      - ROS_MASTER_URI=http://ros-master:11311
      - SERIAL_PORT=${SERIAL_PORT:?err}
    command: >
      roslaunch --wait rosbot_bringup rosbot_docker.launch
